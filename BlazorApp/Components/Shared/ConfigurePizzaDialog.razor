@using BlazorApp.Components.Models
@inject HttpClient HttpClient
@rendermode InteractiveServer

<div class="dialog-container">
	<div class="dialog">
		<div class="dialog-title">
			<h2>@Pizza.Special.Name</h2>
			@Pizza.Special.Description
		</div>
		<form class="dialog-body">
			<div>
			@if (supportSizing) {
				<label>Tamaño:</label>
				<span class="mx-2">@Pizza.MinimumSize</span>
				<input type="range" min="@Pizza.MinimumSize" max="@Pizza.MaximumSize" @bind="Pizza.Size" @bind:event="oninput" step="1"/>
				<span class="mx-2">@Pizza.MaximumSize</span>
			}

			<span class="size-label">
					@(Pizza.Size)" (£@(Pizza.GetFormattedTotalPrice()))
				</span>
			</div>
		</form>

		<div class="dialog-buttons">
			<button class="btn btn-secondary mr-auto" @onclick="OnCancel">Cancelar</button>
			<span class="mr-center">
				Precio: <span class="price">@(Pizza.GetFormattedTotalPrice())</span>
			</span>
			<button class="btn btn-success ml-auto" @onclick="OnConfirm">Ordenar ></button>
		</div>
	</div>
</div>

@code {
	[Parameter] public Pizza Pizza { get; set; }
	[Parameter] public EventCallback OnCancel { get; set; }
	[Parameter] public EventCallback OnConfirm { get; set; }

	bool supportSizing = true;

	protected override void OnInitialized()
	{
		if (Pizza is { Special.FixedSize: not null }) {
			Pizza.Size = Pizza.Special.FixedSize.Value;
			supportSizing = false;
		}
	}

}