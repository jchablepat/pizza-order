@page "/myorders"
@using BlazorApp.Components.Models
@using BlazorApp.Components.Shared
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="main">
    @if (orders == null)
    {
        <text>Loading...</text>
    }
    else if (!orders.Any())
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Ordenar una pizza</a>
    }
    else
    {
        <h3>Ordenes</h3>
@* 		 <TablePagination TItem="OrderWithStatus" Items="orders.OrderBy(o => o.Order.CreatedTime).ToList()" DefaultPageSize="10">
            <ChildContentHeader>
                <tr>
                    <th>Cantidad</th>
                    <th>Precio Total</th>
                    <th>Estado</th>
                    <th>Fecha</th>
                </tr>
            </ChildContentHeader>
            <ChildContentRow Context="item">
                <tr>
                    <td>@item.Order.Pizzas.Count()</td>
                    <td>@item.Order.GetFormattedTotalPrice()</td>
                    <td>@item.StatusText</td>
                    <td>@item.Order.CreatedTime</td>
                </tr>
            </ChildContentRow>
        </TablePagination> *@

		<PaginationComponent TItem="OrderWithStatus"
	        Items="orders.OrderBy(o => o.Order.CreatedTime).ToList()"
	        ItemLabel='item => new($"{item.Order.CreatedTime:dd/MM/yyyy}")'
        >
	        <ItemContent Context="context">
				<div class="list-group-item bg-secondary text-white">
			        <div class="list-group-item">
				        <div class="col">
					        <h5>@context.Order.CreatedTime.ToLongDateString()</h5>
					        Pizzas: <strong>@context.Order.Pizzas.Count()</strong><br />
							Precio Total: <strong>$@context.Order.GetFormattedTotalPrice()</strong>
				        </div>

				        <div class="col">
							Estatus: <strong>@context.StatusText</strong>
				        </div>

						@if (@context.StatusText != "Delivered")
				        {
					        <div class="col flex-grow-0">
								<a href="myorders/@context.Order.OrderId" class="btn btn-success">
							        Monitorear &gt;
						        </a>
					        </div>
				        }
			        </div>
		        </div>
	        </ItemContent>
        </PaginationComponent>
    }
</div>

@code {
    private List<OrderWithStatus>? orders = [];

    protected override async Task OnParametersSetAsync()
    {
        orders = await HttpClient.GetFromJsonAsync<List<OrderWithStatus>>($"{NavigationManager.BaseUri}api/orders");
    }
}